// Code generated by mockery v2.46.1. DO NOT EDIT.

package mocks

import (
	context "context"
	domain "stori/internal/summary/domain"

	mock "github.com/stretchr/testify/mock"
)

// Repository is an autogenerated mock type for the Repository type
type Repository struct {
	mock.Mock
}

// SendEmail provides a mock function with given fields: ctx, emailData
func (_m *Repository) SendEmail(ctx context.Context, emailData domain.EmailData) error {
	ret := _m.Called(ctx, emailData)

	if len(ret) == 0 {
		panic("no return value specified for SendEmail")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, domain.EmailData) error); ok {
		r0 = rf(ctx, emailData)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewRepository creates a new instance of Repository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *Repository {
	mock := &Repository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
